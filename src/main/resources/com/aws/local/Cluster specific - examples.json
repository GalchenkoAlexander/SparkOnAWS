{
  "paragraphs": [
    {
      "text": "%md\n\n### Example of wrong global variable usage\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T15:02:51+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Example of wrong global variable usage</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263094594_397130517",
      "id": "20170908-003212_1434801766",
      "dateCreated": "2017-10-29T07:44:54+0000",
      "dateStarted": "2017-10-29T15:02:51+0000",
      "dateFinished": "2017-10-29T15:02:51+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:11883"
    },
    {
      "text": "%spark2.pyspark\n\ninvalid_rows = 0\n\ndef validate_row(s):\n    global invalid_rows\n    if len(s.split(',')) == 3:\n        return True\n    else:\n        invalid_rows += 1\n        return False\n\n\nmovies = sc.textFile('hdfs://sandbox.hortonworks.com/user/maria_dev/movies.csv')\nmovies = movies.filter(validate_row)    \n\nprint invalid_rows",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T15:03:19+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "0\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263094597_394437275",
      "id": "20170907-200823_323163859",
      "dateCreated": "2017-10-29T07:44:54+0000",
      "dateStarted": "2017-10-29T15:03:19+0000",
      "dateFinished": "2017-10-29T15:03:19+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:11884"
    },
    {
      "text": "%md\n### Same, but with accumulator",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T15:03:22+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Same, but with accumulator</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263094598_395591522",
      "id": "20170907-201504_56102511",
      "dateCreated": "2017-10-29T07:44:54+0000",
      "dateStarted": "2017-10-29T15:03:22+0000",
      "dateFinished": "2017-10-29T15:03:22+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:11885"
    },
    {
      "text": "%spark2.pyspark\n\ninvalid_rows = sc.accumulator(0) # !!!\n\ndef validate_row(s):\n    global invalid_rows\n    if len(s.split(',')) == 3:\n        return True\n    else:\n        invalid_rows += 1\n        return False\n\n\nmovies = sc.textFile('hdfs://sandbox.hortonworks.com/user/maria_dev/movies.csv')\nmovies = movies.filter(validate_row)    \n\n# Can you guess the result?\nprint invalid_rows",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T15:04:44+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "20861\n6418\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263094598_395591522",
      "id": "20170908-003653_46257998",
      "dateCreated": "2017-10-29T07:44:54+0000",
      "dateStarted": "2017-10-29T15:04:18+0000",
      "dateFinished": "2017-10-29T15:04:18+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:11886"
    },
    {
      "text": "%md\n### Broadcast variables",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T15:05:16+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Broadcast variables</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263094599_395206773",
      "id": "20170907-210255_509274879",
      "dateCreated": "2017-10-29T07:44:54+0000",
      "dateStarted": "2017-10-29T15:05:16+0000",
      "dateFinished": "2017-10-29T15:05:16+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:11887"
    },
    {
      "text": "%spark2.pyspark\n\n\nusers = dict([(i,\"User #\" + str(i)) for i in range(1,10001)])\n\nratings = sc.textFile('hdfs://sandbox.hortonworks.com/user/maria_dev/ratings.csv')\n\nverbose = ratings.map(lambda x: x.split(','))\\\n                 .filter(lambda x: x[0] != 'userId')\\\n                 .map(lambda x: (int(x[0]),x[1],x[2]))\\\n                 .map(lambda x: users[x[0]] + ' ranked movie ID' + str(x[1]) + ' as ' + str(x[2]))\nverbose.take(5)\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T15:05:25+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "['User #1 ranked movie ID2 as 3.5', 'User #1 ranked movie ID29 as 3.5', 'User #1 ranked movie ID32 as 3.5', 'User #1 ranked movie ID47 as 3.5', 'User #1 ranked movie ID50 as 3.5']\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263094599_395206773",
      "id": "20170907-205249_1462604242",
      "dateCreated": "2017-10-29T07:44:54+0000",
      "dateStarted": "2017-10-29T15:05:25+0000",
      "dateFinished": "2017-10-29T15:05:25+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:11888"
    },
    {
      "text": "%md\n\n### Same, but with broadcast variable\n",
      "dateUpdated": "2017-10-29T07:44:54+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Same, but with broadcast variable</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263094599_395206773",
      "id": "20170908-014805_1001430910",
      "dateCreated": "2017-10-29T07:44:54+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:11889"
    },
    {
      "text": "%spark2.pyspark\n\n\n# He's how broadcast variable is created\nusers = sc.broadcast(dict([(i,\"User #\" + str(i)) for i in range(1,10001)]))\n\nratings = sc.textFile('hdfs://sandbox.hortonworks.com/user/maria_dev/ratings.csv')\n\nverbose = ratings.map(lambda x: x.split(','))\\\n                 .filter(lambda x: x[0] != 'userId')\\\n                 .map(lambda x: (int(x[0]),x[1],x[2]))\\\n                 .map(lambda x: users.value[x[0]] + ' ranked movie ID' + str(x[1]) + ' as ' + str(x[2])) # note a \".value\" property of broadcast variable\nverbose.take(5)\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T15:07:40+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "['User #1 ranked movie ID2 as 3.5', 'User #1 ranked movie ID29 as 3.5', 'User #1 ranked movie ID32 as 3.5', 'User #1 ranked movie ID47 as 3.5', 'User #1 ranked movie ID50 as 3.5']\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263094600_393283028",
      "id": "20170908-014654_66432641",
      "dateCreated": "2017-10-29T07:44:54+0000",
      "dateStarted": "2017-10-29T15:07:40+0000",
      "dateFinished": "2017-10-29T15:07:40+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:11890"
    },
    {
      "text": "%md\n",
      "dateUpdated": "2017-10-29T07:44:54+0000",
      "config": {
        "colWidth": 12,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1509263094600_393283028",
      "id": "20170907-211313_1403883787",
      "dateCreated": "2017-10-29T07:44:54+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:11891"
    }
  ],
  "name": "Big Data School - Cluster specific - examples",
  "id": "2CW169RQD",
  "angularObjects": {
    "2CND78TZ5:shared_process": [],
    "2CR2V48XX:shared_process": [],
    "2CS1CKTB6:shared_process": [],
    "2CR42WHB9:shared_process": [],
    "2C8A4SZ9T_livy2:shared_process": [],
    "2CR8B4RNG:shared_process": [],
    "2A4U48MY3_spark2:shared_process": [],
    "2CQR2Q67N:shared_process": []
  },
  "config": {
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}