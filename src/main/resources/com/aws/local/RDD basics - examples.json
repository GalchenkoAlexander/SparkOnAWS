{
  "paragraphs": [
    {
      "text": "%md\n## RDD basic examples\n* creating RDDs manually\n* basic transformations\n* basic actions\n* reading RDD from simple HDFS file",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T08:03:19+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>RDD basic examples</h2>\n<ul>\n  <li>creating RDDs manually</li>\n  <li>basic transformations</li>\n  <li>basic actions</li>\n  <li>reading RDD from simple HDFS file</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135681_1865778366",
      "id": "20170907-021458_307749951",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "dateStarted": "2017-10-29T08:03:19+0000",
      "dateFinished": "2017-10-29T08:03:20+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:4383"
    },
    {
      "text": "%md\nSparkContext object is automatically created by Zeppelin:\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T08:03:24+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>SparkContext object is automatically created by Zeppelin:</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135683_1866547864",
      "id": "20170907-021720_1514780002",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "dateStarted": "2017-10-29T08:03:24+0000",
      "dateFinished": "2017-10-29T08:03:24+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4384"
    },
    {
      "text": "%spark2.pyspark\nprint \"Here's predefined SparkContext object:{0}\".format(sc)\nprint \"SparkContext is an entry point for all other methods we will use.\\nIt's methods and properties:\"\nprint '-'*80\nprint dir(sc)\nprint '-'*80\nprint \"\\n\"\nprint \"In usual Python program SparkContext would be created like this:\"\nprint \"from pyspark import SparkContext\"\nprint \"sc = SparkContext(appName = 'HelloWorld')\"",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T08:03:25+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "/usr/hdp/current/spark2-client/python/pyspark/context.py:207: UserWarning: Support for Python 2.6 is deprecated as of Spark 2.0.0\n  warnings.warn(\"Support for Python 2.6 is deprecated as of Spark 2.0.0\")\n/tmp/zeppelin_pyspark-1968759837322269714.py:151: UserWarning: Unable to load inline matplotlib backend, falling back to Agg\n  warnings.warn(\"Unable to load inline matplotlib backend, \"\nHere's predefined SparkContext object:<pyspark.context.SparkContext object at 0x16a5210>\nSparkContext is an entry point for all other methods we will use.\nIt's methods and properties:\n--------------------------------------------------------------------------------\n['PACKAGE_EXTENSIONS', '__class__', '__delattr__', '__dict__', '__doc__', '__enter__', '__exit__', '__format__', '__getattribute__', '__getnewargs__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_accumulatorServer', '_active_spark_context', '_batchSize', '_callsite', '_checkpointFile', '_conf', '_dictToJavaMap', '_do_init', '_ensure_initialized', '_gateway', '_getJavaStorageLevel', '_initialize_context', '_javaAccumulator', '_jsc', '_jvm', '_lock', '_next_accum_id', '_pickled_broadcast_vars', '_python_includes', '_temp_dir', '_unbatched_serializer', 'accumulator', 'addFile', 'addPyFile', 'appName', 'applicationId', 'binaryFiles', 'binaryRecords', 'broadcast', 'cancelAllJobs', 'cancelJobGroup', 'defaultMinPartitions', 'defaultParallelism', 'dump_profiles', 'emptyRDD', 'environment', 'getConf', 'getLocalProperty', 'getOrCreate', 'hadoopFile', 'hadoopRDD', 'master', 'newAPIHadoopFile', 'newAPIHadoopRDD', 'parallelize', 'pickleFile', 'profiler_collector', 'pythonExec', 'pythonVer', 'range', 'runJob', 'sequenceFile', 'serializer', 'setCheckpointDir', 'setJobGroup', 'setLocalProperty', 'setLogLevel', 'setSystemProperty', 'show_profiles', 'sparkHome', 'sparkUser', 'startTime', 'statusTracker', 'stop', 'textFile', 'uiWebUrl', 'union', 'version', 'wholeTextFiles']\n--------------------------------------------------------------------------------\n\n\nIn usual Python program SparkContext would be created like this:\nfrom pyspark import SparkContext\nsc = SparkContext(appName = 'HelloWorld')\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135683_1866547864",
      "id": "20170907-021918_406145262",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "dateStarted": "2017-10-29T08:03:26+0000",
      "dateFinished": "2017-10-29T08:04:19+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4385"
    },
    {
      "text": "%md\nRDD can be created from driver program list by calling SparkContext.parallelize method\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T08:04:46+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>RDD can be created from driver program list by calling SparkContext.parallelize method</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135684_1864624119",
      "id": "20170907-022027_655464561",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "dateStarted": "2017-10-29T08:04:46+0000",
      "dateFinished": "2017-10-29T08:04:46+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4386"
    },
    {
      "text": "%spark2.pyspark\nl = range(5)\nr = sc.parallelize(l)\nprint type(l)\nprint type(r)\nprint r.collect()",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T08:04:54+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "<type 'list'>\n<class 'pyspark.rdd.RDD'>\n[0, 1, 2, 3, 4]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135685_1864239370",
      "id": "20170907-024812_1715382686",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "dateStarted": "2017-10-29T08:04:50+0000",
      "dateFinished": "2017-10-29T08:04:52+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4387"
    },
    {
      "text": "%md \n### Basic transformations: filter\nFilters out RDD elements for which function returns False\n\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic transformations: filter</h3>\n<p>Filters out RDD elements for which function returns False</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135686_1865393617",
      "id": "20170907-024938_2072542993",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4388"
    },
    {
      "text": "%spark2.pyspark\n\nnum = sc.parallelize([1,2,3,4,5])\nnum.filter(lambda x: x % 2 == 0).collect()\n",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T08:05:01+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[2, 4]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135687_1865008868",
      "id": "20170907-025239_1406697334",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "dateStarted": "2017-10-29T08:05:01+0000",
      "dateFinished": "2017-10-29T08:05:01+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4389"
    },
    {
      "text": "%md \n### Basic transformations: map\nApplies function to each RDD element and returns the result\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic transformations: map</h3>\n<p>Applies function to each RDD element and returns the result</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135687_1865008868",
      "id": "20170907-025541_1831466967",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4390"
    },
    {
      "text": "%spark2.pyspark\n\nnum = sc.parallelize([1,2,3,4,5])\nnum.map(lambda x: x*x).collect()",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[1, 4, 9, 16, 25]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135688_1863085124",
      "id": "20170907-025656_1763294522",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4391"
    },
    {
      "text": "%md \n### Basic transformations: flatMap\nApplies function to each RDD element. Function is expected to return a list for each input element. \nResulting lists are combined to the single list.\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic transformations: flatMap</h3>\n<p>Applies function to each RDD element. Function is expected to return a list for each input element.<br/>Resulting lists are combined to the single list.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135689_1862700375",
      "id": "20170907-025738_1703047308",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4392"
    },
    {
      "text": "%spark2.pyspark\ntxt = sc.parallelize(['I must not fear'\n                     ,'Fear is the mind-killer'\n                     ,'Fear is the little-death that brings total obliteration.'])\nprint txt.flatMap(lambda x: x.split(' ')).collect()   # flat map\nprint txt.map(lambda line: line.split(' ')).collect() # simple map",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "['I', 'must', 'not', 'fear', 'Fear', 'is', 'the', 'mind-killer', 'Fear', 'is', 'the', 'little-death', 'that', 'brings', 'total', 'obliteration.']\n[['I', 'must', 'not', 'fear'], ['Fear', 'is', 'the', 'mind-killer'], ['Fear', 'is', 'the', 'little-death', 'that', 'brings', 'total', 'obliteration.']]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135690_1863854621",
      "id": "20170907-030702_1586679952",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4393"
    },
    {
      "text": "%md \n### Basic transformations: distinct\nReturns unique elements.\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic transformations: distinct</h3>\n<p>Returns unique elements.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135691_1863469872",
      "id": "20170907-030814_301921674",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4394"
    },
    {
      "text": "%spark2.pyspark\ntxt = sc.parallelize(['I must not fear'\n                     ,'Fear is the mind-killer'\n                     ,'Fear is the little-death that brings total obliteration.'])\nprint txt.flatMap(lambda x: x.split(' ')) \\\n         .map(lambda x: x.lower()) \\\n         .distinct() \\\n         .collect() ",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "['i', 'not', 'fear', 'is', 'the', 'obliteration.', 'that', 'brings', 'little-death', 'mind-killer', 'total', 'must']\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135692_1861546128",
      "id": "20170907-031212_910326838",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4395"
    },
    {
      "text": "%md \n### Basic transformations: union\nJust combines two RDDs into one. Note: it is NOT removing duplicates",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic transformations: union</h3>\n<p>Just combines two RDDs into one. Note: it is NOT removing duplicates</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135693_1861161379",
      "id": "20170907-031305_566564685",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4396"
    },
    {
      "text": "%spark2.pyspark\nnum1 = sc.parallelize([1,2,3])\nnum2 = sc.parallelize([3,4,5])\nnum1.union(num2).collect()",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[1, 2, 3, 3, 4, 5]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135694_1862315626",
      "id": "20170907-033827_1893119864",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4397"
    },
    {
      "text": "%md\n### Basic transformations: cartesian\n\nProduces cartesian product on two RDDs\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic transformations: cartesian</h3>\n<p>Produces cartesian product on two RDDs</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135694_1862315626",
      "id": "20170907-033920_23555115",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4398"
    },
    {
      "text": "%spark2.pyspark\ncol = sc.parallelize(['A','B','C','D','E','F','G','H'])\nrow = sc.parallelize(range(1,9))\n\ncol.cartesian(row).collect()",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[('A', 1), ('A', 2), ('A', 3), ('A', 4), ('B', 1), ('B', 2), ('B', 3), ('B', 4), ('C', 1), ('C', 2), ('C', 3), ('C', 4), ('D', 1), ('D', 2), ('D', 3), ('D', 4), ('A', 5), ('A', 6), ('A', 7), ('A', 8), ('B', 5), ('B', 6), ('B', 7), ('B', 8), ('C', 5), ('C', 6), ('C', 7), ('C', 8), ('D', 5), ('D', 6), ('D', 7), ('D', 8), ('E', 1), ('E', 2), ('E', 3), ('E', 4), ('F', 1), ('F', 2), ('F', 3), ('F', 4), ('G', 1), ('G', 2), ('G', 3), ('G', 4), ('H', 1), ('H', 2), ('H', 3), ('H', 4), ('E', 5), ('E', 6), ('E', 7), ('E', 8), ('F', 5), ('F', 6), ('F', 7), ('F', 8), ('G', 5), ('G', 6), ('G', 7), ('G', 8), ('H', 5), ('H', 6), ('H', 7), ('H', 8)]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135695_1861930877",
      "id": "20170907-034013_56488878",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4399"
    },
    {
      "text": "%md\n### Basic transformations: intersection\n\nReturns elements that are present in both RDDs. Note: duplicates are removed\n\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic transformations: intersection</h3>\n<p>Returns elements that are present in both RDDs. Note: duplicates are removed</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135695_1861930877",
      "id": "20170907-034143_629831735",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4400"
    },
    {
      "text": "%spark2.pyspark\ndynamo = sc.parallelize(['Shevchenko','Rebrov','Luzhniy','Kaladze','Belkevich','Gusev','Shevchenko']) \nmilan  = sc.parallelize(['Barezzi','Maldini','Costacurta','Van Basten','Shevchenko','Kaladze','Shevchenko'])\n\ndynamo.intersection(milan).collect()\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "['Shevchenko', 'Kaladze']\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135696_1872319097",
      "id": "20170907-034342_1486029413",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4401"
    },
    {
      "text": "%md\n### Basic transformations: subtract\n\nRemoves elements present in another RDD. Note: duplicates are not removed\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic transformations: subtract</h3>\n<p>Removes elements present in another RDD</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135696_1872319097",
      "id": "20170907-034710_874297263",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4402"
    },
    {
      "text": "%spark2.pyspark\nsouthpark = sc.parallelize(['Stan','Kyle','Eric','Kenny'])\nkilled = sc.parallelize(['Kenny'])\n\nsouthpark.subtract(killed).collect()\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "['Stan', 'Kyle', 'Eric']\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135697_1871934348",
      "id": "20170907-035123_920800175",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4403"
    },
    {
      "text": "%md\n### Basic transformations: groupBy\nGroups elements by key returned by function\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic trnsformations: groupBy</h3>\n<p>Groups elements by key returned by function</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135700_1870780102",
      "id": "20170907-053209_1541847743",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4404"
    },
    {
      "text": "%spark2.pyspark\n\nb = sc.parallelize(['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'])\n\nprint [(k,list(v)) for k,v in b.groupBy(lambda x: x[0]).collect()]",
      "user": "anonymous",
      "dateUpdated": "2017-10-29T13:29:31+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[('S', ['Saturday', 'Sunday']), ('M', ['Monday']), ('W', ['Wednesday']), ('T', ['Tuesday', 'Thursday']), ('F', ['Friday'])]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135701_1870395353",
      "id": "20170907-053346_1861216817",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "dateStarted": "2017-10-29T13:29:28+0000",
      "dateFinished": "2017-10-29T13:29:28+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4405"
    },
    {
      "text": "%md\n### Basic transformations: zip\nCombines two RDDs into one by elements\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1509263135702_1871549599",
      "id": "20170907-195708_1034004435",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4406"
    },
    {
      "text": "%spark2.pyspark\nnum = sc.parallelize([1,2,3,4,5])\nname = sc.parallelize(['One','Two','Three','Four','Five'])\n\nnum.zip(name).collect()\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[(1, 'One'), (2, 'Two'), (3, 'Three'), (4, 'Four'), (5, 'Five')]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135702_1871549599",
      "id": "20170907-195709_467491156",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4407"
    },
    {
      "text": "%md\n### Basic transformations: sortBy\nSorts RDD by key returned by function\n\n\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic transformations: sortBy</h3>\n<p>Sorts RDD by key returned by function</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135703_1871164850",
      "id": "20170907-055951_783225416",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4408"
    },
    {
      "text": "%spark2.pyspark\n\nb = sc.parallelize(['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'])\n\nb.sortBy(lambda x: x[0]).collect()\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "['Friday', 'Monday', 'Saturday', 'Suday', 'Tuesday', 'Thursday', 'Wednesday']\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135704_1869241106",
      "id": "20170907-060226_864460403",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4409"
    },
    {
      "text": "%md\n### Basic actions: reduce\n\nReduces RDD to a single value by applying specified function\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic actions: reduce</h3>\n<p>Reduces RDD to a single value by applying specified function</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135704_1869241106",
      "id": "20170907-035332_540620868",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4410"
    },
    {
      "text": "%spark2.pyspark\n\nnum = sc.parallelize([1,2,3,4,5])\n\nnum.reduce(lambda x,y: x + y)",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "15\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135704_1869241106",
      "id": "20170907-035609_48087419",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4411"
    },
    {
      "text": "%spark2.pyspark\n\n# Yes, this is word-count example. That's a big data course, after all.\n\ntxt = sc.parallelize(['I must not fear'\n                     ,'Fear is the mind-killer'\n                     ,'Fear is the little-death that brings total obliteration.'])\n                     \ntxt.flatMap(lambda x: x.split(' ')) \\\n   .map(lambda x: 1) \\\n   .reduce(lambda x,y: x + y)\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "16\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135705_1868856357",
      "id": "20170907-035807_494067309",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4412"
    },
    {
      "text": "%md\n\n### Basic actions: aggregate\n\nLike \"reduce\", but return type should not match RDD element type. \nTakes three arguments:\n* start aggregated value\n* function to combine aggregated value with element\n* function to combine two aggregated values\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic actions: aggregate</h3>\n<p>Like &ldquo;reduce&rdquo;, but return type should not match RDD element type.<br/>Takes three arguments:<br/>* start aggregated value<br/>* function to combine aggregated value with element<br/>* function to combine two aggregated values</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135705_1868856357",
      "id": "20170907-040827_479604466",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4413"
    },
    {
      "text": "%spark2.pyspark\n\nnum = sc.parallelize([1,2,3,4,5])\n\n# calculate sum, sum of squares and number of elements of the RDD\nnum.aggregate((0,0,0) \\\n             ,lambda x,y: (x[0] + y, x[1] + y*y, x[2] + 1) \\\n             ,lambda x,y: (x[0]+y[0], x[1]+y[1], x[2]+ y[2])) \n             \n# why do we need the third parameter? Why don't we need it for reduce?\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "(15, 55, 5)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135706_1870010604",
      "id": "20170907-041642_152175748",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4414"
    },
    {
      "text": "%md\n\n### Basic actions: collect\n\nReturns the whole RDD as a list to driver program. Obviously, RDD should fit driver's memory",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic actions: collect</h3>\n<p>Returns the whole RDD as a list to driver program. Obviously, RDD should fit driver&rsquo;s memory</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135706_1870010604",
      "id": "20170907-040320_289146615",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4415"
    },
    {
      "text": "%md\n\n### Basic actions: take\n\nReturns a requested number of RDD elements (like partial collect()). Elements order is not guaranteed!",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic actions: take</h3>\n<p>Returns a requested number of RDD elements (like partial collect()). Elements order is not guaranteed.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135707_1869625855",
      "id": "20170907-040558_959580924",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4416"
    },
    {
      "text": "%spark2.pyspark\n\nnum = sc.parallelize(range(1,11))\n\nnum.take(3)",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[1, 2, 3]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135708_1867702110",
      "id": "20170907-052029_953607885",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4417"
    },
    {
      "text": "%md\n\n### Basic actions: top\n\nReturns top N records sorted RDD\n\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic actions: top</h3>\n<p>Returns top N records sorted RDD</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135708_1867702110",
      "id": "20170907-052107_283437472",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4418"
    },
    {
      "text": "%spark2.pyspark\n\nnum = sc.parallelize([6,7,4,8,1,4,5,9,8,7])\n\nprint num.take(3)\nprint num.top(3, lambda x: -x)\nprint num.take(3)\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[6, 7, 4]\n[1, 4, 4]\n[6, 7, 4]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135709_1867317361",
      "id": "20170907-070126_1473285966",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4419"
    },
    {
      "text": "%md\n\n### Basic actions: statistical\n* min\n* max\n* sum\n* mean\n* variance\n* stddev\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic actions: statistical</h3>\n<ul>\n  <li>min</li>\n  <li>max</li>\n  <li>sum</li>\n  <li>mean</li>\n  <li>variance</li>\n  <li>stddev</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135709_1867317361",
      "id": "20170907-070418_664427179",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4420"
    },
    {
      "text": "%md\n\n### Basic actions: forEach\nJust executes the function for each element in the RDD. Returns nothing. \nTypical usage - some actions outside Spark (send email to each address, write each records to the DB etc.)",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Basic actions: forEach</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135710_1868471608",
      "id": "20170907-070553_790514374",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4421"
    },
    {
      "text": "%spark2.pyspark\n\ndef print_element(x):\n    print x\n\nr = sc.parallelize(range(1,5))\n\nr.foreach(print_element) # what result do you expect?\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1509263135710_1868471608",
      "id": "20170907-070648_1162606895",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4422"
    },
    {
      "text": "%md\n### Basic actions: countByValue",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1509263135711_1868086859",
      "id": "20170907-195247_1048390541",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4423"
    },
    {
      "text": "%spark2.pyspark\ntxt = sc.parallelize(['I must not fear'\n                     ,'Fear is the mind-killer'\n                     ,'Fear is the little-death that brings total obliteration.'])\n\ntxt.flatMap(lambda x: x.split(' ')).map(lambda x: x.lower()).countByValue()\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defaultdict(<type 'int'>, {'obliteration.': 1, 'that': 1, 'i': 1, 'brings': 1, 'is': 2, 'little-death': 1, 'mind-killer': 1, 'not': 1, 'fear': 3, 'total': 1, 'the': 2, 'must': 1})\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135711_1868086859",
      "id": "20170907-195249_1594546453",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4424"
    },
    {
      "text": "%md\n\n### Reading from file",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Reading from file</h3>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135712_1853851150",
      "id": "20170907-071549_112992746",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4425"
    },
    {
      "text": "%spark2.pyspark\n\nmovies = sc.textFile('hdfs://sandbox.hortonworks.com/user/maria_dev/data/movie/movies.csv')\n\nmovies.take(5)",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[u'movieId,title,genres', u'1,Toy Story (1995),Adventure|Animation|Children|Comedy|Fantasy', u'2,Jumanji (1995),Adventure|Children|Fantasy', u'3,Grumpier Old Men (1995),Comedy|Romance', u'4,Waiting to Exhale (1995),Comedy|Drama|Romance']\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1509263135712_1853851150",
      "id": "20170907-072606_2021413902",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4426"
    },
    {
      "text": "%spark2.pyspark\n",
      "dateUpdated": "2017-10-29T07:45:35+0000",
      "config": {
        "colWidth": 12,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python"
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1509263135712_1853851150",
      "id": "20170907-072640_962401998",
      "dateCreated": "2017-10-29T07:45:35+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:4427"
    }
  ],
  "name": "Big Data School - RDD basics - examples",
  "id": "2CZHXRY9J",
  "angularObjects": {
    "2CND78TZ5:shared_process": [],
    "2CR2V48XX:shared_process": [],
    "2CS1CKTB6:shared_process": [],
    "2CR42WHB9:shared_process": [],
    "2C8A4SZ9T_livy2:shared_process": [],
    "2CR8B4RNG:shared_process": [],
    "2A4U48MY3_spark2:shared_process": [],
    "2CQR2Q67N:shared_process": []
  },
  "config": {
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}